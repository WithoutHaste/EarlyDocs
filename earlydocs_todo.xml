<?xml version="1.0" encoding="UTF-8"?>
<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns:c="urn:schemas-microsoft-com:office:component:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:x2="http://schemas.microsoft.com/office/excel/2003/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:schemas-microsoft-com:office:spreadsheet">
  <Styles>
    <Style ss:ID="cellShortDate">
      <NumberFormat ss:Format="Short Date" />
    </Style>
    <Style ss:ID="header">
      <Font ss:Bold="1" />
    </Style>
    <Style ss:ID="paragraph">
      <Alignment ss:WrapText="1" />
    </Style>
  </Styles>
  <ss:Worksheet ss:Name="Active">
    <Table>
      <Column ss:Width="25" />
      <Column ss:Width="300" />
      <Column ss:Width="60" />
      <Column ss:Width="60" />
      <Column ss:Width="60" />
      <Row>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Id</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Description</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Status</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Category</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Created</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">99</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">DataFiles.TextHelper
- "this" keyword not showing on "this" parameters in extension methods</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-29T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">98</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">in DataFiles
any namespace that requires a third-party library that the others do not
must be separated into its own solution so it can have its own nuget package
- will need to add these as dependency in EarlyDocs nuspec</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">85</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">remove dependency on Libraries</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">81</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">should each library have its own NuGet package?
should the WithoutHaste.Libraries functionality be copied among the others so they don't all have that one extra dependency being dragged around?
---
Libraries project has two functions: check a filename has the right extension, and return the version number of this assembly.
The first is not very reusable.
The second is made obsolete by putting each library into a NuGet package, which requires version information.
---
So yeah, let's remove all dependencies to WithoutHaste.Libraries.
And put each library into its own NuGet package.</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">46</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">test local NuGet package in WithoutHaste.Drawing.Colors</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">79</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">test local NuGet package in WithoutHaste.Drawing.Shapes</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">80</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">test local NuGet package in WithoutHaste.Windows.GUI</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">2</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">public NuGet package</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-06T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">18</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">document all supported tags
including the custom "inheritdoc" used by GhostDocs and Sandcastle
including my custom "duplicate" for method overloading</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Documentation</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">7</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">support custom tag: &lt;duplicate cref="..." /&gt;
which will completely copy the documentation from the references Type/Method/etc to this one
- use case: Overloaded methods that have duplicate xml documentation, just their parameter types are different

this is still very human readable in the code itself

Ex: DataFiles.ExcelPackageHelper.AppendRows

When EarlyDocs is released, can add an Answer to
https://stackoverflow.com/questions/41715976/dry-xml-comments
about this custom functionality</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-17T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">36</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">make sure readme is clear that this is based on open source library WithoutHaste.DataFiles.DotNet which parses the xml documentation and Assembly reflection information and available for others to use.</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Documentation</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-26T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">3</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">? announce finished project on AskHN ?
? or somewhere on Reddit ?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-06T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">10</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">when version 1.0.0 is ready, re-make all the library documentation with most up to date version</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">19</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">link ReadMe to Test  documentation as make demonstration and to my other library projects as live demonstrations</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">88</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">AFTER VERSION 1</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">89</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.Excel.ExcelPackageHelper
- constant fields do not have values in documentation</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">57</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">support linking back to namespace table of contents when there is an extra segment between main namespace and type name</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-08T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">53</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">the generic type parameter aliases are static
so running multiple files through this documentation process will rack up edits to thoses aliases without ever resetting them
- they need to be local to one instance of a DotNetDocumentationFile</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-26T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">64</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">EarlyDocs.DotNetExtensions
refactor ToHeader and ToDisplayX methods to use DotNetQualifiedName instead of string parent
use new DataFiles name.Localize(parentName) method</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">65</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">EarlyDocs.DotNetExtensions
figure out how to refactor all the AddTopLevelX vs AddX methods</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">69</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">DotNetMember.ParseVisualStudioXml
a lot of that code duplication can be removed</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
    </Table>
    <x:WorksheetOptions />
  </ss:Worksheet>
  <ss:Worksheet ss:Name="Inactive">
    <Table>
      <Column ss:Width="25" />
      <Column ss:Width="300" />
      <Column ss:Width="60" />
      <Column ss:Width="60" />
      <Column ss:Width="60" />
      <Column ss:Width="60" />
      <Row>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Id</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Description</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Status</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Category</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Created</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Done</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">95</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.Markdown.MarkdownFile
- method return types should be localized to current namespace</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-29T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">94</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.ArbitraryCounter
- protected method is not marked protected</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">93</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.TextHelper
RemoveOuterBraces method
- inline xml ended up as a block
+fixed with previous bug - handling of text blocks that don't end with \n</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">92</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.TextHelper
RemoveFromEnd method
- on paramref, display name
- on typeparamref too</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">91</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.AlphabetCounter
- fix constuctors inheriting docs
+actually, that was an incorrect use of inheritdoc, so no bug</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">82</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">based on installing EPPlus package
I'm not naming or placing the readme.txt correctly
- compare to EPPlus in DataFiles

+just removing the text readme and putting link to github documentation in nuget description</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">86</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">in readme, include example of how to override properties
and what their defaults are</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Documentation</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">90</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">WithoutHaste.DataFiles.Excel.ExcelPackageHelper
AddWorksheet
- parameter comments not showing
and return types general not shown for any methods here
+this issue was because loading the assembly from byte[] disconnected it from all the other assemblies - couldn't look up 3rd party references
+went through lots of research and testing
+new design is to load the assemblies as normal, and have EarlyDocs unload its own AppDomain when done to release the file locks
+it appears to be working, will have to see if the file lock issue comes up again</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-27T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">87</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">on top level TableOfContents
order types by name</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-26T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">96</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">property option to turn off earlydocs without uninstalling it</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-26T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">84</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">support overriding *.dll filename</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">83</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">support overriding *.XML filename</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">78</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">tested that Properties can be overridden in project</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">37</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">config option: empty documentation folder before saving or leave it alone
default, leave it alone</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-28T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">77</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">tested property EarlyDocsOutputDirectory</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">76</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">tested property EarlyDocsEmptyOutputDirectory</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">74</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">suddenly getting frequent locked file errors on builds
- DataFiles was keeping a lock on dll
- fixed</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">75</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">Note:
Naming the project and dll "EarlyDocs" instead of "WithoutHaste.EarlyDocs" because it is a stand alone project. No one is expected to be including the namespace directly in their code. And it has a specific single purpose, not a general reusable one, so the name is designed to be unique already.</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Documentation</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">61</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">install EarlyDocs into the Test project build operations
- test</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-16T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">73</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">create a master table of contents file
with a consistent name
that links to all the namespace-specific contents
- this will enable incremental build logic by providing a 1-to-1 mapping between input and output files</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-16T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-16T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">54</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">implementing inheritdoc that looks more than one level deep</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-26T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-16T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">62</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">implementing duplicate that looks more than one level deep</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">72</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">DataFiles.DotNet
- make all the GetFullListOfLocalNames internal</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">71</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">i'm adding the clone functionality
so that DotNetQualifiedName.Localize can use a clone instead of a Flattened</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">66</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">EarlyDocs
refactor any name comparison logic to DataFiles</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">63</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">EarlyDocs.ConvertXML
move formatting of filenames to central location all filename creators can use</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">58</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">fix line-spacing issues in all output</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">70</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">optional parameters</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-14T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">68</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">ref parameters</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">67</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">out parameters (Type@ in method info, i think)</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">59</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">review all "todo" comments in code
move serious "todos" into here</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">56</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">Markdown: allow nested paragraphs
the end result being that each paragraph makes sure it ends with a double end line
- this will make formatting (for instance) the Misc section easier, making sure the whole region ends with a double endline even if it contains paragraphs of its own</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-08T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">16</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">in an interface .md file, list all types within the assembly that inherit from that interface (with their summary)
- can interfaces inherit from each other - yes they can</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">44</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">list of other .Net documentors:
https://visualstudiomagazine.com/articles/2017/02/21/vs-dotnet-code-documentation-tools-roundup.aspx</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-10T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">8</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">for constants, can i show the const value?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-18T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">6</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">for Properties, list any public/protected get/sets as such</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-13T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">49</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">this is the Microsoft documentation link for "System.EventHandler&lt;T&gt;":
https://docs.microsoft.com/en-us/dotnet/api/system.eventhandler-1

is this format regular enough that I can auto-link known types from the markdown to microsoft?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">28</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">subnamespaces, like DataFiles.Markdown
- top level table of contents has Namespace section that links to a separate TableOfContents.Markdown.md file for each subnamespaces (and so on)
- types in subnamespaces saved to same folder like Markdown.MarkdownFile.md</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">27</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">if namespace of class does not match assembly name
- update: assembly name is irrelevant</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">45</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">how to cref a static constructor?
- open question on StackOverflow
- open question on Sandcastle github</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">50</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">each page should link back to it's parent Table of Contents</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-22T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">40</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">keep working through test cases until all are handled
- extend complex test cases as needed</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-11-12T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">48</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">cannot find any documentation of the correct way to do nested lists in .Net xml documentation
- for version 1, do not support nested lists</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">47</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">instead of breaking if parent type is not found
either ignore the member or add a default type or list this as an orphaned member
- for version 1, ignore the member</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">43</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">? remove Demo project ?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">39</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">include a how-to for using .Net xml tags
with details like how to reference an indexer property in a cref
- when this page is done, link Visual Studio code notes to here instead of duplicating the documentation notes</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Documentation</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-08T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">41</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">write complex comments test cases</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-18T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">34</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">cref link to generic method</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">33</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">cref link to generic type</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">32</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">cref link to constructor</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">31</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">cref link to operator method</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">5</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">what happens to the documentation for a partial class if more than one part of the class has documentation?
can you end up with multiple Summary, Remarks, etc?
what order is it in?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-13T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">1</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">add Demo project
that will have structure and documentation that tests/demos every feature in the project</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-06T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">17</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">differentiate public and protected members</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">22</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">showing abstract and virtual methods</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">15</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">support listing inheritance from class and multiple interfaces</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">21</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">can I show full inheritance on all types, back to the beginning?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">23</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">separate normal types from static types in TableOfContents</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">20</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">can exceptions be determine by their superclass(s) reaching up to Exception instead of by naming convention?</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">29</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">nested types</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-21T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">12</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">display as shown in design document</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">24</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">fill Demo with test cases
- name like ClassWithShortDocumentation, ClassFromPartial, and describe these with their Demo purpose in their documentation
- use lorem ipsum for space-filling so it clear user does not need to read it</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-09T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">26</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">refactor parsing of VS XML to objects to DataFiles library
- because I need to test XmlCode parsing of block and I can't with it in the Console Application</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-10-08T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">25</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">table of contents looking good after refactor</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-20T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-20T00:00:00.000</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="Number">11</Data>
        </Cell>
        <Cell ss:StyleID="paragraph">
          <Data ss:Type="String">build up MarkDown format in DataFiles
on save, create MarkDown object then save it to string</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
        <Cell ss:StyleID="cellShortDate">
          <Data ss:Type="DateTime">2018-09-19T00:00:00.000</Data>
        </Cell>
      </Row>
    </Table>
    <x:WorksheetOptions />
  </ss:Worksheet>
  <ss:Worksheet ss:Name="Config">
    <Table>
      <Row>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Status</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Active</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Category</Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell ss:StyleID="header">
          <Data ss:Type="String">Max Id</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="String">Todo</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Active</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Major</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="Number">99</Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="String">Done</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Inactive</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Feature - Minor</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Inactive</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Major</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Inactive</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Bug - Minor</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Inactive</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Task</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
      </Row>
      <Row>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Inactive</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">Documentation</Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
        <Cell>
          <Data ss:Type="String">
          </Data>
        </Cell>
      </Row>
    </Table>
    <x:WorksheetOptions />
  </ss:Worksheet>
</Workbook>